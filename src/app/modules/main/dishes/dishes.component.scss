@use '@angular/material' as mat;
$takeaway-clone-primary: mat.define-palette(mat.$orange-palette);

.main-img {
  width: 100%;
  max-height: 300px;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: center;
  object-position: center;
}

.tag-wrapper {
  display: grid !important;
  grid-auto-flow: column;
  height: 48px;
  transition: width 0.25s ease-in-out;

  overflow-x: auto;
  overflow-y: hidden;
  overscroll-behavior-inline: contain;

  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

.snaps-inline {
  -ms-scroll-snap-type: inline mandatory;
  scroll-snap-type: inline mandatory;
  scroll-padding-inline: 1rem;
  scroll-behavior: smooth;

  > * {
    scroll-snap-align: start;
  }
}

.tag-btn-wrapper {
  transition: width 0.25s ease-in-out;
  &:has(> .scroll-btn:not(.show)) {
    width: 0;
  }

  &:has(> .scroll-btn.show) {
    width: 48px;
    transition: width 0.25s ease-in-out;
  }
}

.scroll-btn {
  transform: scale(0, 1) translateX(0);
  transition: all 0.25s ease-in-out;
  &.left-btn {
    margin-right: -48px;
  }
  &.right-btn {
    position: relative;
    right: 0;
    margin-left: -48px;
  }

  &.show {
    transform: scale(1, 1) translateX(0);
    transition: all 0.25s ease-in-out;
    margin-left: 0;
    margin-right: 0;
  }
}

.info-box {
  border-color: mat.get-color-from-palette(
    $takeaway-clone-primary,
    600
  ) !important;

  ::ng-deep {
    .mat-mdc-card-header-text {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
  }
  .mat-mdc-card-title,
  .mat-mdc-card-subtitle {
    display: initial;
  }

  .mat-mdc-card-subtitle {
    padding-bottom: 8px;
  }
}
