@use 'sass:string';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$takeaway-clone-primary: mat.define-palette(mat.$orange-palette);
$takeaway-clone-accent: mat.define-palette(mat.$grey-palette, 500, A400, A700);

// The warn palette is optional (defaults to red).
$takeaway-clone-warn: mat.define-palette(mat.$red-palette);

$custom-typography: mat.define-typography-config(
  $font-family:
    "'Roboto', 'BlinkMacSystemFont', 'Segoe UI', 'Helvetica Neue', 'Helvetica', 'Arial',  sans-serif",
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$takeaway-clone-theme: mat.define-light-theme(
  (
    color: (
      primary: $takeaway-clone-primary,
      accent: $takeaway-clone-accent,
      warn: $takeaway-clone-warn,
    ),
    typography: $custom-typography,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($takeaway-clone-theme);
@include mat.all-component-typographies($takeaway-clone-theme);

/* You can add global styles to this file, and also import other style files */

.bg-mat-primary {
  background: mat.get-color-from-palette(
    $takeaway-clone-primary,
    600
  ) !important;
}

.bg-mat-accent {
  background: mat.get-color-from-palette(
    $takeaway-clone-accent,
    300
  ) !important;
}

.bg-mat-white {
  background-color: white !important;
}

.mat-color-accent {
  color: mat.get-color-from-palette($takeaway-clone-accent, 300) !important;
}

$mat-icons-suffix: ('', '-outlined', '-round', '-sharp', '-two-tone');

@each $suffix in $mat-icons-suffix {
  .material-icons#{$suffix} {
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-smoothing: antialiased;

    @if ($suffix != '') {
      $sliced: string.slice($suffix, 2);
      $first: string.slice($sliced, 1, 1);
      @if ($suffix == '-two-tone') {
        font-family: 'Material Icons Two Tone';
      } @else {
        font-family: #{'Material Icons ' +
          string.to-upper-case($first) +
          string.slice($sliced, 2)};
      }
    } @else {
      font-family: 'Material Icons';
    }
  }
}
